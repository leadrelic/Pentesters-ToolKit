import hashlib
import cmd


class PasswordCrackingModule(cmd.Cmd):
    prompt = '(password_cracking) '
    intro = 'Password Cracking Module. Type help or ? to list commands.\n'

    def do_crack_hash(self, arg):
        """Crack a hash using a dictionary attack.\nUsage: crack_hash <hash>"""
        args = arg.split()
        if len(args) != 2:
            print("Usage: crack_hash <hash> <path_to_dictionary>")
            return
        target_hash, dict_path = args
        self.crack_hash_with_dict(target_hash, dict_path)

    def do_quit(self, arg):
        """Return to the main menu."""
        print("Exiting Password Cracking Module.")
        return True

    def crack_hash_with_dict(self, target_hash, dict_path):
        """Attempt to crack the given hash using a dictionary file."""
        try:
            with open(dict_path, 'r') as file:
                for line in file:
                    word = line.strip()
                    # Assuming the hash is SHA-256. Change accordingly if using a different algorithm.
                    if hashlib.sha256(word.encode()).hexdigest() == target_hash:
                        print(f"Password found: {word}")
                        return
                print("Password not found in dictionary.")
        except FileNotFoundError:
            print(f"Dictionary file not found: {dict_path}")